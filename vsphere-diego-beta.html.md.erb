---
title: Deploying Diego Beta on vSphere for Windows
---

This topic contains instructions for deploying Diego beta on vSphere for Windows. See the [Diego Beta Overview](./diego-beta.html) topic for general information on Diego beta.

<p class='note'><strong>Note</strong>: For instructions on how to deploy Diego Beta on AWS, see the <a href='./aws-diego-beta.html'>Deploying Diego Beta on AWS for Windows</a> topic.</p>

## <a id='install-windows-server'></a> Step 1: Install a Windows Server ##

Install a Windows Server 2012 R2 64bit VM on the same vSphere cluster to which you deployed **Diego for PCF**.

## <a id='disable-windows-firewall'></a> Step 2: Configure your Windows Firewall ##

Either disable the Windows firewall or configure it to allow the necessary traffic.

## <a id='step3'></a> Step 3: Configure the Windows Server##

Run the following configuration commands on the windows server:

<pre class='terminal'>
dism /online /Enable-Feature /FeatureName:IIS-WebServer /All /NoRestart
dism /online /Enable-Feature /FeatureName:IIS-WebSockets /All /NoRestart
dism /online /Enable-Feature /FeatureName:Application-Server-WebServer-Support /FeatureName:AS-NET-Framework /All /NoRestart
dism /online /Enable-Feature /FeatureName:IIS-HostableWebCore /All /NoRestart

netsh interface ipv4 add dnsserver "Ethernet" address=127.0.0.1 index=1
netsh interface ipv4 add dnsserver "Ethernet" address=DNS-SERVER-IP index=2
netsh interface ipv4 show dnsservers

sc config Dnscache start= disabled
sc stop Dnscache
</pre>
Replace `DNS-SERVER-IP` with your DNS IP address.

## <a id='msi'></a> Step 4: Install the MSI ##

<%= partial 'msi-env-vars' %>

## <a id='confirm-deployment'></a> Step 5: Confirm Successful Deployment##

After successful deployment, the following jobs are running:

* Consul
* Containerizer
* Executor
* GardenWindows
* Rep

## <a id='push-dot-net-app'></a> Step 6: Push a .Net application ##

Clone the sample app Nora from [GitHub](https://github.com/pivotal-cf-experimental/nora/tree/master/assets/nora).

Run the following command:

<pre class='terminal'>
./make_a_nora
</pre>

This script executes the commands below to push, configure, and start your application.

<pre class='terminal'>
cf push $APPNAME -s windows2012R2 -b https://github.com/ryandotsmith/null-buildpack.git --no-start
cf set-env $APPNAME DIEGO_BETA true
cf set-env $APPNAME DIEGO_RUN_BETA true
cf enable-diego $APPNAME
cf start $APPNAME
</pre>

<p class='note'><strong>Note</strong>: <code>cf push</code> won’t use the given buildpack, but it’s still necessary to specify one at this point (just use the null-buildpack). The <a href='https://github.com/ryandotsmith/null-buildpack'>null buildpack</a> is not available on PCF by default.
</p>

Run `cf apps` to confirm that your app is in the `started` state.
