---
title: Providing a Certificate for your SSL Termination Point
owner: RelEng
---

<strong><%= modified_date %></strong>

This topic describes the procedure for providing [Pivotal Cloud Foundry](https://network.pivotal.io/products/pivotal-cf) (PCF) Elastic Runtime with an SSL certificate, as part of the process of configuring Elastic Runtime for deployment. See [Getting Started with Pivotal Cloud Foundry ](../installing/index.html) for help installing PCF on your IaaS of choice.

## <a id="navigate-to-networking"></a> Navigate to Elastic Runtime Networking Configuration

1. Navigate to the Pivotal Cloud Foundry Operations Manager Installation
Dashboard.

1. Click the **Elastic Runtime** tile in the Installation Dashboard.

1. Select **Networking**.

## <a id="config"></a>Configure Router or HAProxy SSL Termination

### <a id="prod"></a>Configure for a Production Deployment

1. Under **Configure the point-of-entry to this environment**, choose one of the following:
  * **External Load Balancer with Encryption**: Select this option if your deployment uses an external load balancer that can forward encrypted traffic to the Elastic Runtime Router.
  * **HAProxy**: Select this option to use HAProxy as your first point of entry.


1. Enter your PEM encoded certificate and your PEM encoded private key in the fields under **SSL Termination Certificate and Private Key**. If your deployment is on AWS, this certificate must match the one that you uploaded to AWS earlier in the [Upload an SSL Certificate](../customizing/cloudform-template.html#upload-cert) section of the [Deploying the CloudFormation Template for PCF on AWS](../customizing/cloudform-template.html) topic.
<%= image_tag 'ssl-termination.png' %>
    <p class="note"><strong>Note</strong>: Certificates generated in Elastic Runtime are signed by the Operations Manager Certificate Authority. They are not technically self-signed, but they are sometimes referred to as 'Self-Signed Certificates' in the Ops Manager GUI and throughout this documentation.</p>

1. (HAProxy Only) Select **Disable HTTP traffic to HAProxy** if you want HAProxy to only allow HTTPS traffic.

1. Configure **SSL Ciphers**. Leave these fields blank unless you want to use a specific set of SSL ciphers for the Router or HAProxy. Enter a colon-separated list of custom SSL ciphers to pass to the Router or HAProxy.


### <a id="dev"></a>Configure for a Development or Testing Deployment

1. Under **Configure the point-of-entry to this environment**, choose one of the following:
  * **External Load Balancer with Encryption**: Select this option if your deployment uses an external load balancer that can forward encrypted traffic to the Elastic Runtime Router.
  * **HAProxy**: Select this option to use HAProxy as your first point of entry.
1. Click **Generate RSA Certificate** for the Pivotal certificate authority to generate a certificate with the RSA certificate wizard. You may need to click **Change** to populate the UI with the **Generate RSA Certificate** text button.
1. Enter your system and app domains in wildcard format. Optionally, also add custom domains in wildcard format. You can generate a single certificate for two domains separated by a comma, such as `*.apps.YOUR-DOMAIN.com, *.system.YOUR-DOMAIN.com`. The example below uses `*.YOUR-DOMAIN.com`.
<%= image_tag("generate-cert.png") %>
<p class="note"><strong>Note</strong>: SSL certificates generated for wildcard DNS records only work for a single domain name component or component fragment. For example, a certificate generated with <code>\*.YOUR-DOMAIN.com</code> does not work for <code>apps.YOUR-DOMAIN.com</code> and <code>system.YOUR-DOMAIN.com</code>. The certificate must have both <code>apps.YOUR-DOMAIN.com</code> and <code>system.YOUR-DOMAIN.com</code> attributed to it. </p>
1. Click **Generate** to populate the **SSL Certificate** fields with RSA certificate and private key information.

1. (HAProxy Only) Select **Disable HTTP traffic to HAProxy** if you want HAProxy to only allow HTTPS traffic.

1. Configure **SSL Ciphers**. Leave these fields blank unless you want to use a specific set of SSL ciphers for the Router or HAProxy. Enter a colon-separated list of custom SSL ciphers to pass to the Router or HAProxy.

1. Click **Save**.
