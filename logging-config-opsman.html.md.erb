---
title: Configuring Logging in Elastic Runtime
owner: APM
---

<strong><%= modified_date %></strong>

This topic describes the types of logs that Pivotal Cloud Foundry (PCF) generates. It also explains how to forward system logs to an external aggregator service, how to scale [Loggregator](../loggregator/architecture.html) component VMs to keep up with app log volume, and how to manage app traffic logging.

## <a id='types'></a> System Logs, App Logs, App Traffic Logs ##

Pivotal Cloud Foundry (PCF) generates two types of logs, _system logs_ from PCF components and _app logs_ from hosted apps, as differentiated in the table below:

<table id='log-types' border="1" class="nice" >
  <tr>
    <th>Log Type</th>
    <th>Originate from</th>
    <th>Follow format</th>
    <th>Stream from</th>
    <th>Can to stream out to (configurable)</th>
    <th>Visible to</th>
  </tr><tr>
  	<th>System Logs</th>
    <td>Platform components</td>
    <td>Syslog standard</td>
    <td>rsyslog agent</td>
    <td>Component syslog drain</td>
    <td>Operators</td>
  </tr><tr>
  	<th rowspan=3>App Logs</th>
    <td rowspan=3>Hosted apps</td>
    <td>Format is up to the developer</td>
    <td>Firehose<sup>1</sup></td>
    <td>External data platform, optionally via nozzles</td>
    <td rowspan=3>Developers and Operators</td>
  </tr><tr>
    <th colspan=3>(Optional) With Scalable Syslog Adapter</th>
  </tr><tr>
    <td bgcolor="#FBFBFB">Converted to syslog standard</td>
    <td bgcolor="#FBFBFB">Scalable Syslog Adapter</td>
    <td bgcolor="#FBFBFB">External syslog drain</td>
  </tr>
</table>

<sup>1</sup>The Loggregator Firehose also streams component metrics.

When app containers communicate (or attempt to communicate) via [container-to-container networking](../concepts/understand-cf-networking.html), their host cells generate _app traffic logs_. App traffic logs are system logs, not app logs. They come from host cells, not apps, and they carry no information from inside the app. They only show app communication behavior detected from outside by the host cell.

## <a id='syslog-forward'></a> Enable Syslog Forwarding ##

To forward system log messages to an external Reliable Event Logging Protocol (RELP) server, complete the following steps:

1. From the Elastic Runtime tile, Select **System Logging**.
	<%= image_tag 'sys-logging.png' %>
1. If you want to include security events in your log stream, select the **Enable Cloud Controller security event logging** checkbox.
This logs all API requests, including the endpoint, user, source IP, and request result, in the Common Event Format (CEF).
1. Enter the IP address of your syslog server in **External Syslog Aggregator Hostname** and its port in **External Syslog Aggregator Port**. The default port for a syslog server is `514`.
<p class="note"><strong>Note</strong>: The host must be reachable from the Elastic Runtime network, accept TCP connections, and use the RELP protocol. Ensure your syslog server listens on external interfaces.</p>
1. Select an **External Syslog Network Protocol** to use when forwarding logs.
1. For the **Syslog Drain Buffer Size**, enter the number of messages the Doppler server can hold from Metron agents before the server starts to drop them. See the [Loggregator Guide for Cloud Foundry Operators](../loggregator/log-ops-guide.html) topic for more details.
1. Click **Save**.

## <a id='scaling'></a> Scale Loggregator ##

Apps constantly generate app logs and PCF platform components constantly generate component metrics. The Loggregator system combines these data streams and handles them as follows. See [Overview of the Loggregator System](../loggregator/architecture.html) for more information. 

* The [Metron](../loggregator/architecture.html#metron) agent running on each component or application VM collects and sends this data out to Doppler components. 
* [Doppler](../loggregator/architecture.html#doppler) components temporarily buffer the data before periodically forwarding it to the Traffic Controller. When the log and metrics data input to a Doppler exceeds its buffer size for a given interval, data can be lost. 
* The [Traffic Controller](../loggregator/architecture.html#traffic-controller) serves the aggregated data stream through the Firehose WebSocket endpoint.

Follow the instructions below to scale the Loggregator system. For guidance on monitoring and capacity planning, see [Monitoring Pivotal Cloud Foundry](../monitoring/).

### <a id="instances"></a> Add Component VM Instances

1. From the **Elastic Runtime** tile, select **Resource Config**.
1. Increase the number in the **Instances** column of the component you want to scale. You can add instances for the following Loggregator components: 
	* **Loggregator Traffic Controller**
		<p class="note"><strong>Note</strong>: The <a href="../loggregator/architecture.html#metron">Reverse Log Proxy (RLP)</a> BOSH job is colocated with the Traffic Controller VM. If you want to scale Loggregator to handle more logs for syslog drains, you can add instances of the Traffic Controller.</p>
	* **Syslog Adapter**
	* **Doppler Server**
  <%= image_tag 'loggregator-vms.png' %>
1. Click **Save**.
1. Click **Apply Changes**.

##<a id="app-traffic-log"></a>Manage App Traffic Logging

To enable logging for app traffic:

1. From Ops Manager, navigate to the **Pivotal Elastic Runtime** tile > **Networking** pane.

1. Under **Log traffic for all accepted/denied application packets**, select **Enable (will increase log volume)** or **Disable** to enable or disable app traffic logging.

###<a id="log-behavior"></a>App Logging Behavior

App traffic logging generates log messages as follows:

  * **TCP traffic** - Logs the first packet of every new TCP connection.
  * **UDP traffic** - Logs UDP packets sent and received, up to a maximum per-second rate for each container. Set this rate limit in the **UDP logging interval** field (default: 100).
  * **Packets denied** - Logs packets blocked by either a container-specific [networking policy](../concepts/understand-cf-networking.html#policies) or by [Application Security Group](./app-sec-groups.html) (ASG) rules applied across the space, org, or deployment. Logs packet denials up to a maximum per-second rate for each container, set in the **Denied logging interval** field (default: 1).

###<a id="log-format"></a>App Logging Format

App traffic logs are formatted as described in the [cf-networking-release Traffic logging](https://github.com/cloudfoundry-incubator/cf-networking-release/blob/develop/docs/traffic_logging.md) documentation, following the `iptables-logger` format but without line breaks. For example, the first part of an app traffic log line looks like: `{"timestamp": "1500924070.182554722", "source": "cfnetworking.iptables", "message": "cfnetworking.iptables.ingress-allowed", "log_level": 1, "data": { "destination": { "container_id": "d5978989-1401-49ff-46cd-33e5","app_guid": "bc6f229d-5e4a-4c41-a63f-e8795496c283",`.

###<a id="denied-packet"></a>Denied Packet Causes

You can determine whether a denied-packet log resulted from a container networking policy or an ASG rule as follows:

  * **Container networking policy**: Log `message` string includes `ingress-denied` and `packet direction` is `ingress`.

  * **ASG rule**: Log `message` string includes `egress-denied` and `packet direction` is `egress`.

