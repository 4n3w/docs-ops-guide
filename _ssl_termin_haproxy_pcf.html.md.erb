In PCF, perform the following steps to configure SSL termination on HAProxy:

1. Navigate to the Ops Manager Installation Dashboard.

1. Click the **Elastic Runtime** tile in the Installation Dashboard.

1. Click **Networking**.

1. Configure the following based on the IaaS of your PCF deployment.
    <table>
    <tr>
     <th>If your PCF deployment is on:</th>
     <th>Then configure the following:</th>
     <th>See also:</th>
    </tr>
    <tr>
     <td>
     OpenStack or vSphere
     </td>
     <td>Decide whether you want your HAProxy to be highly available.<ul>
      <li>If you need highly available HAProxy, then perform the following steps:
      <ol>
        <li>Choose an IP address for each HAProxy instance on the subnet where you deployed PCF.</li>
        <li>In the **HAProxy IPs** field of the **Networking** page, enter the IP addresses you have selected for your HAProxy instances.</li>
        <li>Configure your load balancer (for example, F5 or NSX) to forward domain names to the HAProxy IP addresses.</li>
      </ol>
      <li>If you do not require high availability (for example, you are setting up a development environment), then perform the following steps:
      <ol>
       <li>Skip setting up the load balancer.</li>
       <li>Choose one IP address for the single HAProxy instance.</li>
       <li>Configure DNS to point at the IP address. See [How to Set Up DNS for HAProxy](#haproxy_dns).</li>
      </ol>
    </ul></td>
    <td>For more information, see the Elastic Runtime networking configuration topic for [OpenStack](../customizing/openstack-er-config.html#networking) or [vSphere](../customizing/config-er-vmware.html#networking). 
    </td>
    <tr>
    <td>
    AWS, GCP or Azure
    </td>
    <td><ol><li>Leave the HAProxy IP address blank.</li>
    <li>In the **Resource Config** page of Elastic Runtime tile, locate the HAProxy job.</li>
    <li>In the **Load Balancer** column for the HAProxy job, specify the appropriate IaaS load balancer resource.</li>
    </ol>
    </td>
    <td>For more information, see the Elastic Runtime installation instructions for [AWS](../customizing/pcf-aws-manual-er-config.html#config-elb), [Azure](../customizing/azure-er-config.html#networking), or [GCP](../customizing/gcp-er-config.html#networking).
    </td>
     </tr>
   </table> 

1. Under **Select one of the point-of-entry-options**, select the third option, **Forward SSL to HAProxy**.
 
1. Enter your PEM encoded certificate and your PEM encoded private key in the fields under **SSL Termination Certificate and Private Key**. You can either upload your own certificate or generate a RSA certificate in Elastic Runtime. For options and instructions on creating a certificate for your wildcard domains, see [Creating a Wildcard Certificate for PCF Deployments](../opsguide/security_config.html#create_or_obtain_certs).
  
1. If you want to use a specific set of SSL ciphers for HAProxy, configure **HAProxy SSL Ciphers**. Enter a colon-separated list of custom SSL ciphers to pass to HAProxy. Otherwise, leave this field blank.

1. If you want HAProxy to only allow HTTPS traffic, select **Disable HTTP traffic to HAProxy**.
    <%= image_tag("ssl-termination.png") %>

1. If you expect requests larger than the default maximum of 16 Kbytes, enter a new value (in bytes) for **Request Max Buffer Size**. You may need to do this, for example, to support apps that embed large cookie or query string values in headers.

1. If you are not using SSL encryption or if you are using self-signed certificates, you can select **Disable SSL certificate verification for this environment**. Selecting this checkbox also disables SSL verification for route services. 
  <p class="note">Use this checkbox only for development and testing environments. Do not select it for production environments.</p>
    
1. Click **Save**. 

1. For PCF deployments on Azure, configure the HAProxy job in the **Resource Config** page of Elastic Runtime tile. For more information, see the Elastic Runtime installation instructions for [Azure](../customizing/azure-er-config.html#networking). 