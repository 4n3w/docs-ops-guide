---
title: Configuring Proxy Settings for All Apps
owner: Routing
---

This topic describes how to globally configure proxy settings for all apps in your Pivotal Cloud Foundry (PCF) deployment. 
Some environments restrict access to the Internet by requiring traffic to pass through an HTTP or HTTPS proxy. 
PCF operators can use the cf Command Line Interface (CLI) to provide the proxy settings to all apps, including system apps and service brokers.

<p class="note"><strong>Note</strong>: Incorrectly configuring proxy settings can prevent apps from connecting to the Internet or accessing required resources. 
They can also cause errands to fail and break system apps and service brokers. 
Although errands, system apps, and service brokers do not need to connect to the Internet, 
they do often need to access other resources on PCF and incorrect proxy settings can break these connections.</p>

##<a id='set-env-variables'></a> Set Environment Variables ##

To globally configure proxy settings for PCF apps, perform the following steps to set three environment variables for both 
the staging environment variable group and the running environment variable group. 

For more information about variable groups, see the [Environment Variable Groups](../../devguide/deploy-apps/environment-variable.html#evgroups) section in 
the Cloud Foundry Environment Variables topic.

This procedure explains how to set proxy information for both staging and running apps. However, you can set proxy settings for only staging or only running apps.

1. Target your Cloud Controller with the cf CLI. 
If you have not installed the cf CLI, see the [Installing the cf Command Line Interface](http://docs.pivotal.io/pivotalcf/1-7/cf-cli/install-go-cli.html) topic.
    <pre class="terminal">
    $ cf api api.YOUR-SYSTEM-DOMAIN
    Setting api endpoint to api.YOUR-SYSTEM-DOMAIN...
    OK
    API endpoint:   <span>https:</span>//api.YOUR-SYSTEM-DOMAIN (API version: 2.54.0)
    Not logged in. Use 'cf login' to log in.
    </pre>

1. Log in with your UAA administrator credentials. To retrieve these credentials, navigate to the **Pivotal Elastic Runtime** tile in 
    the Ops Manager Installation Dashboard and click **Credentials**. Under **UAA**, click **Link to Credential** next to **Admin Credentials** and record the password.
    <pre class="terminal">
    $ cf login
    API endpoint: <span>https:</span>//api.YOUR-SYSTEM-DOMAIN
    
    Email> admin
    Password>
    Authenticating...
    OK
    </pre>

1. To configure proxy access for apps that are staging, run the following command, replacing the placeholder values:
<pre class="terminal">$ cf set-staging-environment-variable-group '{"http\_proxy": "<span>http:</span>//YOUR-PROXY:8080/", "https\_proxy": "<span>http:</span>//YOUR-PROXY:8080/", "no\_proxy": "NO-PROXY.EXAMPLE.COM"}'.</pre>
    * `http_proxy`: Set this value to the proxy to use for HTTP requests.
    * `https_proxy`: Set this value to the proxy to use for HTTPS requests. In most cases, this will be the same as `http_proxy`.
    * `no_proxy`: Set this value to a comma-separated list of DNS names or IP addresses that can be accessed without passing through the proxy. 
    This value may not be needed, because it depends on your proxy configuration.
    From now on, the proxy settings are applied to staging apps.

1. To configure proxy access for apps that are running, run the following command, replacing the placeholder values as above:
<pre class="terminal">$ cf set-running-environment-variable-group '{"http\_proxy": "<span>http:</span>//YOUR-PROXY:8080/", "https\_proxy": "<span>http:</span>//YOUR-PROXY:8080/", "no\_proxy": "NO-PROXY.EXAMPLE.COM"}'.</pre>
    
    To configure proxy settings for Java-based apps, use the following command instead, replacing the placeholder values. 
    For `http.nonProxyHosts`, use a pipe-delimited list rather than a comma-separated list. 
    <pre class="terminal">$ cf set-running-environment-variable-group '{"JAVA\_OPTS": "-Dhttp.proxyHost=YOUR-PROXY -Dhttp.proxyPort=8080 -Dhttp.nonProxyHosts=NO-PROXY.EXAMPLE.COM"}'</pre>
    For more information about these Java proxy settings, see [Java Networking and Proxies](http://docs.oracle.com/javase/8/docs/technotes/guides/net/proxies.html).

1. To apply the proxy configuration for the running environment variable group, you must restart each app that you want to use the new configuration.

##<a id='troubleshooting'></a> Troubleshooting ##

If an app fails after you apply the global proxy settings, consider the following explanations. 

### Exclude an App From Global Proxy Settings

If your app fails, try instructing the app to ignore the global proxy settings. 
Perform the following commands to manually unset the proxy environment variables for the failing app:

1. Unset the proxy environment variables for `http_proxy`:
    <pre class="terminal">$ cf set-env YOUR-APP http_proxy "</pre>
1. Unset the proxy environment variables for `https_proxy`:
    <pre class="terminal">$ cf set-env YOUR-APP https_proxy "</pre>
1. Unset the proxy environment variables for `no_proxy`:
    <pre class="terminal">$ cf set-env YOUR-APP no_proxy "</pre>

### Change Case of HTTP

Your app and language runtime may be case-sensitive. 
Try performing the steps in the [Set Environment Variables](#set-env-variables) section using uppercase for `HTTP_PROXY`, `HTTPS_PROXY`, and `NO_PROXY` instead of lowercase. 
Refer to the following example. 
<pre class="terminal">$ cf set-staging-environment-variable-group '{"HTTP\_PROXY": "<span>http:</span>//YOUR-PROXY:8080/", "HTTPS\_PROXY": "<span>http:</span>//YOUR-PROXY:8080/"}'.</pre>

### Symptom Unknown

If your proxy can only send traffic to the Internet, you need to set `no_proxy` such that traffic destined for PCF itself and other internal resources does not go out to through the proxy. 
You can prevent traffic destined for PCF from going out through the proxy by setting `no_proxy` to contain your system and apps domains.

What are we saying here? That traffic originating in one part of PCF and going to another part of PCF will get blocked by the proxy, 
and therefore we must add PCF domains to `no_proxy`?

### Verify Interpretation

Intepretation of `no_proxy` depends on the app and the language runtime. Most support `no_proxy`, but the specific implementation may vary. 
For example, some match DNS names that end with the value set in `no_proxy`: `example.com` would match `test.example.com`. 
Others support the use of the asterisk as a wildcard to provide basic pattern matching in DNS names: `*.example.com` would match `test.example.com`. 
Most apps and language runtimes do not support pattern matching and wildcards for IP addresses.



QUESTIONS

1) Is the dot at the end of the `cf set` commands intentional?

2) What is going on with the Symptom Unknown section? What is the symptom that might motivate users setting `no_proxy` to their system and app domains? Slowness?


