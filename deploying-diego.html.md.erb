---
title: Deploying Diego for Windows
---

This topic contains instructions for setting up a Windows cell in a Diego
deployment. For more information about Diego, see the [Diego Architecture](../concepts/diego/diego-architecture.html) and [Diego Components](../concepts/diego/diego-components.html) topics.

A **cell** is a virtual machine (VM) that stages, hosts, and manages application lifecycles. You can install a Windows cell into your Cloud Foundry (CF) deployment through [Amazon CloudFormation](#cloudformation) or by [manually](#manual) connecting directly to a Windows VM.

##<a id='cloudformation'></a>Install through Amazon CloudFormation

###Prerequisites

* A working Diego deployment

###<a id='download'></a>Step 1: Download the CloudFormation Template

1. Navigate to the [Elastic Runtime product on Pivotal Network](https://network.pivotal.io/products/elastic-runtime). This points to the latest release of the **Elastic Runtime** product.

1. Select **DiegoWindows** from the list of Release Download Files.

	![DiegoWindows file group](images/greenhouse/diego-windows-file-group.png)

1. Download the **DiegoWindows AWS CloudFormation.json** file.
	
	![DiegoWindows CloudFormation](images/greenhouse/diego-windows-cloudformation.png)

###<a id='upload'></a>Step 2: Upload the Template to Amazon Web Services

1. Log in to the Amazon Web Services [CloudFormation console](https://console.aws.amazon.com/cloudformation/home). 

1. Choose **Create Stack** and upload the DiegoWindows AWS CloudFormation template to Amazon S3. 

1. Provide the following information:
 
  * **SecurityGroup**: Security group ID to use for the Windows cells
  * **BoshUserName**: User name to use to access the BOSH director
  * **BoshPassword**: Password to use to access the BOSH director.
  * **BoshHost**: BOSH director host
  * **ContainerizerPassword**: Password for the containerizer user. Must be alphanumeric and contain at least one capital, one lowercase, and one numeric character.
  * **CellName**: The name for your cell
  * **VPCID**: The ID of the VPC where you want the cell and subnet to be created
  * **NATInstance**: The instance ID of the NAT box. To find this instance ID, search for `NAT` in the CloudFormation dropdown.
  * **SubnetCIDR**: The IP range of the Windows cell subnet: for example, `10.0.100.0/24`. You should provide a range that does not collide with an existing subnet within the VPC.
  * **Keypair**: A keypair. You must have the private key to this keypair to retrieve the Administrator password to the Windows VMs that are created.

![DiegoWindows CloudFormation Form](images/greenhouse/cloud-formation-form.png)

The CloudFormation template will configure the Windows cell for the
appropriate availability zone based on the provided security group; install the
MSI; and register itself with Diego. The CloudFormation template will only
succeed if all services are up and running after installation. To debug a
failed install, navigate to Advanced Options and set **Rollback on failure** to `No`.

![DiegoWindows CloudFormation Form](images/greenhouse/rollback-on-failure.png)

## <a id="manual"></a>Install Manually 

### Prerequisites

* A working Diego deployment
* A Windows Server 2012R2 VM instance that is routable to your Diego deployment
    * See [recommended instance types](https://github.com/cloudfoundry-incubator/diego-release/tree/3b229e0b971402387bd7c1831e96b2a177cbfcae#recommended-instance-types) in the GitHub Diego release repo for details.
    * If you are creating a new Windows image, and not using one predefined and
supplied by your IaaS, we recommend using this [ISO image](https://msdn.microsoft.com/subscriptions/json/GetDownloadRequest?brand=MSDN&locale=en-us&fileId=62611&activexDisabled=true&akamaiDL=false) as a starting
point. You must have an MSDN account to download this ISO image.
	* We recommend at least 50 gigabytes of storage space for your Windows VM instance.
* A new subnet for the Windows cell
    * You should place the Windows cell and BOSH in separate subnets to avoid potential conflicts. A BOSH deploys fails if the Windows cell uses an IP address that BOSH needs.

### Step 1: Retrieve the setup files ##

Follow the instructions below to download and configure the Windows cell.

1. From your Windows cell, navigate to the [Elastic Runtime product on Pivotal Network](https://network.pivotal.io/products/elastic-runtime). 

1. Select the **DiegoWindows** file group from the table.

	![DiegoWindows file group](images/greenhouse/diego-windows-file-group.png)

1. Download the **setup.ps1** and **generate.exe** files. Keep this window open, you will need it in the following steps.

  <p class='note'><strong>Note</strong>: If you download the generate.exe file using Internet Explorer, the `.exe` extension will be removed. You must rename the file to add the `.exe` extension.</p>

### <a id='cell'></a>Step 2: Configure the Windows Cell ##


1. Using **File Explorer**, navigate to the download location of the **setup.ps1** and **generate.exe** files.

1. Right-click on the **setup.ps1** file and select **Run with PowerShell**.
The **setup.ps1** script configures Windows features, DNS settings, and the firewall for your Windows cell.

	![run setup script](images/greenhouse/run-setup-script.png)
	
	![setup script running](images/greenhouse/setup-script-running.png)

1. From a command prompt, run `generate.exe` with the following arguments:
`$ generate.exe -boshUrl https://username:password@bosh-director.example.com:25555 -windowsUsername=Administrator -windowsPassword=Password123 -outputDir C:\diego-windows`

### Step 2: Run the Install Script Generator

1. Using a command prompt, run **generate.exe** with the following arguments:
    * **boshUrl**: Find your `boshUrl` in the [troubleshooting](http://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html) documentation.
    * **windowsUsername**: Used to run Containerizer. The user provided must be a member of the Administrators group. All other services will run as the SYSTEM user.
    * **windowsPassword**: The password to your specified windows user.
    * **outputDir**: This specifies the directory that will contain the required certificates and a script to run the installers.

	```    
	$ generate.exe ^
	-boshUrl https://username:password@bosh-director.example.com:25555 ^
	-windowsUsername=Administrator ^
	-windowsPassword=Password123 ^
	-outputDir C:\diego-windows
	```
	
	![run generate script](images/greenhouse/run-generate-script.png)

### <a id='msi'></a>Step 3: Install the MSI

1. Download both **DiegoWindows.msi** and **GardenWindows.msi** from the same Pivotal Network file group to the **outputDir** that you specified above.

	![DiegoWindows msis](images/greenhouse/diego-windows-msis.png)
	
	![downloading msis](images/greenhouse/downloading-msi-screen.png)

1. Using a command prompt, run **install.bat** from the **outputDir**.

	![running install bat](images/greenhouse/running-install-bat.png)
	
### <a id='confirm-deployment'></a> Step 4: Confirm Successful Deployment

Follow the steps below to deploy a sample .NET application to one of your Windows cells and exercise basic Elastic Runtime functionality to ensure that your deployment is functioning properly.

1. Launch **Task Manager**.

1. Navigate to the Services tab and confirm that the following five (5) services are running:
  
  
  	![running services](images/greenhouse/running-services.png)
	
1. Download/clone the [CF Smoke Tests](https://github.com/cloudfoundry/cf-smoke-tests.git) repository.

1. Follow the instructions from the README to run the smoke tests against your
environment with the `enable_windows_tests` configuration flag set to `true`.
