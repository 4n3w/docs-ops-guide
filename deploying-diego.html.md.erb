---
title: Deploying Diego Beta for Windows
---

This topic contains instructions for setting up a Windows instance in a Diego deployment. See the [Diego Beta Overview](./diego-overview.html) topic for general information on Diego Beta.

## <a id='prequisites'></a> Prerequisites ##

* A working Diego deployment
* A Windows Server 2012R2 VM instance that is routable to your Diego deployment.
  Recommended:
  * **r3.xlarge**, see [Diego's recommended instance types](https://github.com/cloudfoundry-incubator/diego-release/tree/3b229e0b971402387bd7c1831e96b2a177cbfcae#recommended-instance-types)
  * If you are creating a new windows image (as opposed to using a predefined image by your IAAS), we recommend using this [ISO image](https://msdn.microsoft.com/subscriptions/json/GetDownloadRequest?brand=MSDN&locale=en-us&fileId=62611&activexDisabled=true&akamaiDL=false) as a starting point. You will need an MSDN account to be able to download the iso file.

## <a id='install-windows-server'></a> Step 1: Set Up the Windows Cell ##

1. Download the `setup.ps1` file from [Pivotal Network](https://network.pivotal.io/products/pivotal-diego-pcf). **NOTE**: make sure you are logged in to Pivotal Network before clicking on the link.

1. On the Windows cell, open File Explorer, right-click the downloaded `setup.ps1` file and
click **Run with PowerShell**.
The script configures the required Windows features, DNS settings, and your
firewall for your Windows cell.

## <a id='msi'></a> Step 2: Install the MSI ##

Install the MSI by running a command that sets your environment variables.
The command depends on the version of the MSI you are using.

<p class='note'><strong>Note</strong>: The following instructions assume that the MSI was downloaded to <code>C:\temp\Diego_Windows_v0_148.msi</code>. Don not worry about figuring out the values to use below, this is covered in other sections below.</p>

<pre class='terminal'>
$ msiexec /norestart /i c:\temp\Diego_Windows_v0_148.msi ^
  ADMIN_USERNAME=[Username with admin privileges] ^
  ADMIN_PASSWORD=[Previous user password] ^
  CONSUL_IPS=[Comma-separated IP addresses of consul agents from BOSH deploy of CF] ^
  ETCD_CLUSTER=[URL of your Diego etcd cluster from BOSH deploy] ^
  CF_ETCD_CLUSTER=[URL of your Elastic Runtime CF etcd cluster from bosh deploy of cf] ^
  STACK=[CF Stack (e.g., windows2012R2)] ^
  REDUNDANCY_ZONE=[Diego zone that this cell is part of] ^
  LOGGREGATOR_SHARED_SECRET=[loggregator secret from your BOSH deploy of CF] ^
  EXTERNAL_IP=[External IP of box] ^
  MACHINE_NAME=[This machine's name (must be unique across your cluster)]
</pre>

An example:

<pre class='terminal'>
$ msiexec /norestart /i c:\temp\Diego_Windows_v0_148.msi ^
  ADMIN_USERNAME=Administrator ^
  ADMIN_PASSWORD=secretpassword ^
  CONSUL_IPS=10.10.5.11,10.10.6.11,10.10.7.11 ^
  ETCD_CLUSTER=http://10.10.5.10:4001 ^
  CF_ETCD_CLUSTER=http://10.244.0.42:4001 ^
  STACK=windows2012R2 ^
  REDUNDANCY_ZONE=0c35dfe1cf34ec47e2a2 ^
  LOGGREGATOR_SHARED_SECRET=loggregator-secret ^
  EXTERNAL_IP=10.10.5.35 ^
  MACHINE_NAME=WIN-RD649GEUDP1
</pre>

<p class='note'><strong>Note</strong>: You can find <code>EXTERNAL_IP</code> by running <code>ipconfig</code> on the Windows VM.</p>

## <a id='env-vars'></a>Environment Variables for Ops Manager Deployments ##

If you used Ops Manager to deploy Diego Beta, complete the following steps to
find the values that you need for the `msiexec` command:

### <a id='opsman-consul-ips'></a>CONSUL_IPS ###

IP addresses of consul agents from your Diego BOSH deployment.

Navigate to your PCF Ops Manager dashboard, click the **Elastic Runtime** tile,
and select **Status**.
Locate your **consul** job and copy the comma-separated list of IP addresses.

### <a id='opsman-etcd-cluster'></a>ETCD_CLUSTER ###

URL of the etcd cluster from your Diego BOSH deployment.

Navigate to your PCF Ops Manager dashboard, click the **Diego for PCF** tile, and select
**Status**.
Locate your **etcd** job and copy the IP addresses.
Run the following command to ensure you can connect to the etcd server from Ops Manager:

<pre class='terminal'>
$ curl http://ETCD-SERVER-IP:4001/v2/keys/message -XPUT -d value="Hello diego"
</pre>

### <a id='opsman-cf-etcd-cluster'></a>CF\_ETCD\_CLUSTER ###

URL for the Elastic Runtime cf etcd cluster from your Cloud Foundry BOSH
deployment.

Navigate to your PCF Ops Manager dashboard, click the **Pivotal Elastic Runtime** tile, and select **Status**.
Locate your **etcd** job and copy the IP address.
Format the IP address as a URL with port 4001, as in the following example URL:  `http://10.10.5.10:4001`

### <a id='opsman-zone'></a>ZONE / REDUNDANCY_ZONE ###

The BOSH redundancy zone that this cell is a part of.

Navigate to your PCF Ops Manager Dashboard, click the **Diego for PCF** tile,
and select **Credentials**.
Locate the username and password for **Receptor Credentials** and navigate to
`http://receptor.YOUR-DOMAIN/v1/cells`.

You should see `zone` listed inside each existing cell, as the example below
shows:

```
[
   {
      "cell_id":"cell-partition-0880c1d1dca06bbf67e1-0",
      "zone":"0880c1d1dca06bbf67e1",
      "capacity":{
         "memory_mb":30679,
         "disk_mb":15993,
         "containers":256
      }
   }
]
```

If you are using AWS, you can find the zone by navigating to **EC2 Dashboard>Instances** on your AWS Console and selecting the instance name.
The zone is separated from the name by a dash in the format `INSTANCE-ZONE`.

For example, an EC2 instance name with `nats-partition-abcde12345fedcb54321/0` has a zone of `abcde12345fedcb54321`.

### <a id='log-shared-secret'></a>LOGGREGATOR\_SHARED\_SECRET ###

The shared secret from your Elastic Runtime deployment.

Navigate to your PCF Ops Manager dashboard and select **Credentials**.
Find the **Doppler Server** job.
The **Shared Secret Credentials** information is formatted as `XXXXXXXXXX / YOUR-SHARED-SECRET`, as shown in the image below.

<%= image_tag("./diego/log-shared-secret.png") %>

## <a id='confirm-deployment'></a> Step 3: Confirm Successful Deployment ##

1. If everything has worked correctly, you should now see the
   following five services running in the Task Manager (it's easier to
   sort the services using the `Description` column and look for
   descriptions starting with `CF `):

   | Name          | Description      | Status  |
   |---------------|------------------|---------|
   | Consul        | CF Consul        | Running |
   | Containerizer | CF Containerizer | Running |
   | Executor      | CF Executor      | Running |
   | GardenWindows | CF GardenWindows | Running |
   | Metron        | CF Metron        | Running |
   | Rep           | CF Rep           | Running |

1. Browse to `http://receptor.YOUR-DOMAIN/v1/cells` and search for `windows2012R2` to view the Windows cells.

For example:

```json
[
  {
    "cell_id": "cell_z1-0",
    "zone": "z1",
    "capacity": {
      "memory_mb": 30158,
      "disk_mb": 45766,
      "containers": 256
    },
    "rootfs_providers": {
      "docker": [

      ],
      "preloaded": [
        "cflinuxfs2"
      ]
    }
  },
  {
    "cell_id": "cell_z2-0",
    "zone": "z2",
    "capacity": {
      "memory_mb": 30158,
      "disk_mb": 45766,
      "containers": 256
    },
    "rootfs_providers": {
      "docker": [

      ],
      "preloaded": [
        "cflinuxfs2"
      ]
    }
  },
  {
    "cell_id": "WIN-FCTL342T6B1",
    "zone": "z1",
    "capacity": {
      "memory_mb": 15624,
      "disk_mb": 35487,
      "containers": 100
    },
    "rootfs_providers": {
      "preloaded": [
        "windows2012R2"
      ]
    }
  }
]
```
